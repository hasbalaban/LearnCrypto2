# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
      - name: Build with Gradle
        run: .gradlew build

      - name: Make gradlew executable
        run: chmod +x ./gradlew

    ## Build all our Build Types at once ##
      - name: Build all artifacts
        id: buildAllApks
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: assembleRelease

      - name: Run Kotlin Linter
        run: ./gradlew ktlintStagingDebugCheck

      - name: Run Unit Tests
        run: ./gradlew testStagingDebugUnitTest


        ## Sign our artifact##
      - name: Sign artifact
        id: signArtifact
        uses: r0adkll/sign-android-release@v1.0.1
        with:
          releaseDirectory: app/build/outputs/apk/ourbuildtype/release
          alias: ${{ secrets.KEYALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload our APK
          uses: actions/upload-artifact@v2.2.0
          with:
            name: Release artifact
            path: app/build/outputs/apk/ourbuildtype/release/app-artifact-*.apk






      - name: Checkout code
          uses: actions/checkout@v2
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                tag_name: ${{ github.ref }}
                release_name: Release ${{ github.ref }}
                body: |
                  Changes in this Release
                  - First Change
                  - Second Change
                  draft: false
                  prerelease: false